input CreateCountry {
    alpha2: String!
    alpha3: String!
    name: String!
    localizedName: String!
}

input UpdateCountry {
    id: String!
    alpha2: String
    alpha3: String
    name: String
    localizedName: String
}

type Country {
    id: String!
    alpha2: String!
    alpha3: String!
    name: String!
    localizedName: String

    states: [State!]
    cities: [City!]
}

input CreateState {
    name: String!

    country: String!
}

input UpdateState {
    id: String!
    name: String

    country: String
}

type State {
    id: String!
    name: String!

    country: Country!
    cities: [City!]
}

input CreateCity {
    name: String!

    country: String!
    state: String!
}

input UpdateCity {
    id: String!
    name: String

    country: String
    state: String
    removeState: Boolean
}

type City {
    id: String!
    name: String!

    country: Country!
    state: State
    postCodes: [PostCode!]
}

input CreatePostCode {
    code: String!

    city: String!
}

input UpdatePostCode {
    id: String!
    code: String

    city: String
}

type PostCode {
    id: String!
    code: String!

    city: City!
    streets: [Street!]
}

input CreateStreet {
    name: String!

    postCode: String!
}

input UpdateStreet {
    id: String!
    name: String

    postCode: String
}

type Street {
    id: String!
    name: String!

    postCode: PostCode!
    addresses: [Address!]
}

input CreateAddress {
    houseNumber: String!
    extra: String

    street: String!
}

input UpdateAddress {
    id: String!
    houseNumber: String
    extra: String
    removeExtra: Boolean

    street: String
}

type Address {
    id: String!
    houseNumber: String!
    extra: String

    street: Street!
}

type Query {
    countries(limit: Int, offset: Int): [Country!]
    country(id: Int, alpha2: String, alpha3: String): Country

    states(limit: Int, offset: Int): [State!]
    state(id: String!): State

    cities(limit: Int, offset: Int): [City!]
    city(id: String!): City

    postCodes(limit: Int, offset: Int): [PostCode!]
    postCode(id: String!): PostCode

    streets(limit: Int, offset: Int): [Street!]
    street(id: String!): Street

    addresses(limit: Int, offset: Int): [Address!]
    address(id: String!): Address
}

type Mutation {
    createCountry(country: CreateCountry!): Country!
    updateCountry(id: Int!, country: UpdateCountry!): Country!
    deleteCountry(id: Int!): Boolean!

    createState(state: CreateState!): State!
    updateState(id: String!, state: UpdateState!): State!
    deleteState(id: String!): Boolean!

    createCity(city: CreateCity!): City!
    updateCity(id: String!, city: UpdateCity!): City!
    deleteCity(id: String!): Boolean!

    createPostCode(postCode: CreatePostCode!): PostCode!
    updatePostCode(id: String!, postCode: UpdatePostCode!): PostCode!
    deletePostCode(id: String!): Boolean!

    createStreet(street: CreateStreet!): Street!
    updateStreet(id: String!, street: UpdateStreet!): Street!
    deleteStreet(id: String!): Boolean!

    createAddress(address: CreateAddress!): Address!
    updateAddress(id: String!, address: UpdateAddress!): Address!
    deleteAddress(id: String!): Boolean!
}
