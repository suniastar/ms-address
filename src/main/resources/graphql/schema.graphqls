scalar UUID

input CountryInput {
    alpha2: String!
    alpha3: String!
    name: String!
    localizedName: String!
}

type Country {
    id: UUID!
    alpha2: String!
    alpha3: String!
    name: String!
    localizedName: String

    states: [State!]
    cities: [City!]
}

input StateInput {
    name: String!

    country: UUID!
}

type State {
    id: UUID!
    name: String!

    country: Country!
    cities: [City!]
}

input CityInput {
    name: String!

    country: UUID!
    state: UUID!
}

type City {
    id: UUID!
    name: String!

    country: Country!
    state: State
    postCodes: [PostCode!]
}

input PostCodeInput {
    code: String!

    city: UUID!
}

type PostCode {
    id: UUID!
    code: String!

    city: City!
    streets: [Street!]
}

input StreetInput {
    name: String!

    postCode: UUID!
}

type Street {
    id: UUID!
    name: String!

    postCode: PostCode!
    addresses: [Address!]
}

input AddressInput {
    houseNumber: String!
    extra: String

    street: UUID!
}

type Address {
    id: UUID!
    houseNumber: String!
    extra: String

    street: Street!
}

type Query {
    countries(limit: Int, offset: Int): [Country!]
    country(id: UUID, alpha2: String, alpha3: String): Country

    states(limit: Int, offset: Int): [State!]
    state(id: UUID!): State

    cities(limit: Int, offset: Int): [City!]
    city(id: UUID!): City

    postCodes(limit: Int, offset: Int): [PostCode!]
    postCode(id: UUID!): PostCode

    streets(limit: Int, offset: Int): [Street!]
    street(id: UUID!): Street

    addresses(limit: Int, offset: Int): [Address!]
    address(id: UUID!): Address
}

type Mutation {
    createCountry(country: CountryInput!): Country!
    updateCountry(id: UUID!, country: CountryInput!): Country!
    deleteCountry(id: UUID!): Boolean!

    createState(state: StateInput!): State!
    updateState(id: UUID!, state: StateInput!): State!
    deleteState(id: UUID!): Boolean!

    createCity(city: CityInput!): City!
    updateCity(id: UUID!, city: CityInput!): City!
    deleteCity(id: UUID!): Boolean!

    createPostCode(postCode: PostCodeInput!): PostCode!
    updatePostCode(id: UUID!, postCode: PostCodeInput!): PostCode!
    deletePostCode(id: UUID!): Boolean!

    createStreet(street: StreetInput!): Street!
    updateStreet(id: UUID!, street: StreetInput!): Street!
    deleteStreet(id: UUID!): Boolean!

    createAddress(address: AddressInput!): Address!
    updateAddress(id: UUID!, address: AddressInput!): Address!
    deleteAddress(id: UUID!): Boolean!
}
